{"version":3,"file":"static/js/63.0e8d6cde.chunk.js","mappings":"8KAEO,MAAMA,EAAaC,EAAAA,EAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iDAKtBC,EAAgBJ,EAAAA,EAAOK,KAAIC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,+G,aCFzB,SAASI,IACtB,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,OACbC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IAmB/C,OAjBAC,EAAAA,EAAAA,YAAU,KACkBC,WACxB,MAAMC,QCXGD,eAA+BN,GAC5C,MACMQ,EAAG,sCAAAC,OAAyCT,EAAO,qBAAAS,OAD7C,oCAENC,QAAiBC,MAAMH,GAG7B,aAFmBE,EAASE,MAG9B,CDIyBC,CAAgBb,IAC7B,QAAEc,GAAYP,EAEdQ,EAAaD,EAAQE,KAAIC,IAAA,IAAC,GAAEC,EAAE,OAAEC,EAAM,QAAEC,GAASH,EAAA,MAAM,CAC3DC,KACAC,OAAQA,EACRC,QAASA,EACV,IAEDjB,EAAeY,EAAW,EAG5BM,EAAmB,GAClB,CAACrB,KAGFsB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAC0B,IAAvBtB,EAAYuB,OACX,cAEAH,EAAAA,EAAAA,KAAC/B,EAAU,CAAAiC,SACRtB,EAAYc,KAAIU,IAAA,IAAC,GAAER,EAAE,OAAEC,EAAM,QAAEC,GAASM,EAAA,OACvCC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEG,EAAAA,EAAAA,MAAA,KAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAC1B,EAAa,CAAA4B,SAAC,YAAuB,IAAEL,MAE1CQ,EAAAA,EAAAA,MAAA,KAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAC1B,EAAa,CAAA4B,SAAC,aAAwB,IAAEJ,OALpCF,EAOJ,OAMjB,C","sources":["Components/Reviews/reviews.styled.js","Components/Reviews/Reviews.jsx","Components/api/GetMovieReviews.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const ReviewList = styled.ul`\r\n  list-style: none;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const AuthorContent = styled.span`\r\n  font-weight: 600;\r\n  font-family: \"Times New Roman\", Times, serif;\r\n  text-decoration: underline;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport GetMovieReviews from \"../api/GetMovieReviews\";\r\nimport { AuthorContent, ReviewList } from \"./reviews.styled\";\r\n\r\nexport default function Reviews() {\r\n  const { movieId } = useParams();\r\n  const [movieReview, setMovieReview] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMovieReviews = async () => {\r\n      const data = await GetMovieReviews(movieId);\r\n      const { results } = data;\r\n\r\n      const reviewInfo = results.map(({ id, author, content }) => ({\r\n        id,\r\n        author: author,\r\n        content: content,\r\n      }));\r\n\r\n      setMovieReview(reviewInfo);\r\n    };\r\n\r\n    fetchMovieReviews();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {movieReview.length === 0 ? (\r\n        \"No reviews\"\r\n      ) : (\r\n        <ReviewList>\r\n          {movieReview.map(({ id, author, content }) => (\r\n            <li key={id}>\r\n              <p>\r\n                <AuthorContent>Author:</AuthorContent> {author}\r\n              </p>\r\n              <p>\r\n                <AuthorContent>Content:</AuthorContent> {content}\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ReviewList>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","export default async function GetMovieReviews(movieId) {\r\n  const key = \"e37afbe8681f4152ae6f2e33bec3a5b8\";\r\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}`;\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n\r\n  return data;\r\n}\r\n"],"names":["ReviewList","styled","ul","_templateObject","_taggedTemplateLiteral","AuthorContent","span","_templateObject2","Reviews","movieId","useParams","movieReview","setMovieReview","useState","useEffect","async","data","url","concat","response","fetch","json","GetMovieReviews","results","reviewInfo","map","_ref","id","author","content","fetchMovieReviews","_jsx","_Fragment","children","length","_ref2","_jsxs"],"sourceRoot":""}