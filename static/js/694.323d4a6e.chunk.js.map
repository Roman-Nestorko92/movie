{"version":3,"file":"static/js/694.323d4a6e.chunk.js","mappings":"+OAEO,MAAMA,EAAaC,EAAAA,EAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wRAetBC,EAAYJ,EAAAA,EAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oDAKrBI,EAAaP,EAAAA,EAAOQ,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2B,aChBrB,SAASO,IACtB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACvC,QAAEC,IAAYC,EAAAA,EAAAA,MAkBpB,OAhBAC,EAAAA,EAAAA,YAAU,KACkBC,WACxB,MAAMC,QCZGD,eAA+BH,GAC5C,MACMK,EAAG,sCAAAC,OAAyCN,EAAO,qBAAAM,OAD7C,oCAENC,QAAiBC,MAAMH,GAG7B,aAFmBE,EAASE,MAG9B,CDKyBC,CAAgBV,IAC7B,KAAEW,GAASP,EAEXQ,EAAaD,EAAKE,KAAIC,IAAA,IAAC,KAAEC,EAAI,aAAEC,GAAcF,EAAA,MAAM,CACvDG,YAAaD,EACbD,KAAMA,EACP,IAEDjB,EAAcc,EAAW,EAG3BM,EAAmB,GAClB,CAAClB,IAECH,GAOHsB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAClC,EAAU,CAAAoC,SACRxB,EAAWgB,KAAIS,IAAA,IAAC,KAAEP,EAAI,YAAEE,GAAaK,EAAA,OACpCC,EAAAA,EAAAA,MAACjC,EAAS,CAAA+B,SAAA,EACRF,EAAAA,EAAAA,KAAC1B,EAAU,CACT+B,IACEP,EAAW,mCAAAX,OAC4BW,GACnCQ,EAENC,IAAI,UAENP,EAAAA,EAAAA,KAAA,KAAAE,SAAIN,MATUA,EAUJ,QAnBX,IAwBX,C","sources":["Components/Cast/cast.styled.js","Components/Cast/Cast.jsx","Components/api/GetMovieCredits.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const ActorsList = styled.ul`\r\n  list-style: none;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  padding: 0;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n  }\r\n\r\n  @media screen and (min-width: 1200px) {\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  }\r\n`;\r\n\r\nexport const ActorItem = styled.li`\r\n  margin: 0 auto;\r\n  width: min-content;\r\n`;\r\n\r\nexport const ImageActor = styled.img`\r\n  width: 200px;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport GetMovieCredits from \"../api/GetMovieCredits\";\r\nimport myKitty from \"../../img/catty-min.jpg\";\r\nimport { ActorsList, ImageActor, ActorItem } from \"./cast.styled\";\r\n\r\nexport default function Cast() {\r\n  const [actorsInfo, setActorsInfo] = useState([]);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchMovieCredits = async () => {\r\n      const data = await GetMovieCredits(movieId);\r\n      const { cast } = data;\r\n\r\n      const actorsData = cast.map(({ name, profile_path }) => ({\r\n        profilePath: profile_path,\r\n        name: name,\r\n      }));\r\n\r\n      setActorsInfo(actorsData);\r\n    };\r\n\r\n    fetchMovieCredits();\r\n  }, [movieId]);\r\n\r\n  if (!actorsInfo) {\r\n    return null;\r\n  }\r\n\r\n  // commit\r\n\r\n  return (\r\n    <>\r\n      <ActorsList>\r\n        {actorsInfo.map(({ name, profilePath }) => (\r\n          <ActorItem key={name}>\r\n            <ImageActor\r\n              src={\r\n                profilePath\r\n                  ? `https://image.tmdb.org/t/p/w200/${profilePath}`\r\n                  : myKitty\r\n              }\r\n              alt=\"name\"\r\n            />\r\n            <p>{name}</p>\r\n          </ActorItem>\r\n        ))}\r\n      </ActorsList>\r\n    </>\r\n  );\r\n}\r\n","export default async function GetMovieCredits(movieId) {\r\n  const key = \"e37afbe8681f4152ae6f2e33bec3a5b8\";\r\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}`;\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n\r\n  return data;\r\n}\r\n"],"names":["ActorsList","styled","ul","_templateObject","_taggedTemplateLiteral","ActorItem","li","_templateObject2","ImageActor","img","_templateObject3","Cast","actorsInfo","setActorsInfo","useState","movieId","useParams","useEffect","async","data","url","concat","response","fetch","json","GetMovieCredits","cast","actorsData","map","_ref","name","profile_path","profilePath","fetchMovieCredits","_jsx","_Fragment","children","_ref2","_jsxs","src","myKitty","alt"],"sourceRoot":""}